from datetime import datetime
import telebot
import random
from config import bot_token, db_name
from database import Database, logger
from ai_service import ai_service

bot = telebot.TeleBot(bot_token)
db = Database(db_name)

user_modes = {}


joke = ['–ü—Ä–∏–¥–µ–ª–∞–ª–∏ –æ–¥–Ω–æ–Ω–æ–≥–æ–º—É –∫–æ–ª–µ—Å–æ –∏ –ø–æ—à–ª–æ –ø–æ–µ—Ö–∞–ª–æ','-–ë–ª–∏–Ω! - —Å–∫–∞–∑–∞–ª —Å–ª–æ–Ω, –Ω–∞—Å—Ç—É–ø–∏–≤ –Ω–∞ –∫–æ–ª–æ–±–∫–∞','–ú–∞–ª–æ –∫—Ç–æ –∑–Ω–∞–µ—Ç, —á—Ç–æ  –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –ò–≤–∞–Ω –ì—Ä–æ–∑–Ω—ã–π —É–±–∏–ª —Å–≤–æ–µ–≥–æ —Å—ã–Ω–∞, –æ–Ω –µ—â–µ —Å–ø–∞–ª–∏–ª –¥–æ–º –∏ —Å—Ä—É–±–∏–ª –¥–µ—Ä–µ–≤–æ','–°—ã–Ω –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞ —Ñ–∞–±—Ä–∏–∫–∏ –ø–æ –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—é —Ç—É–∞–ª–µ—Ç–Ω–æ–π –±—É–º–∞–≥–∏ –≤—Å–µ–≥–¥–∞ –≤ –∫–æ—Å—Ç—é–º–µ –º—É–º–∏–∏']

@bot.message_handler(commands=['start'])   #–û—Ç–≤–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É start
def com_start(message):
    print(message)
    user_modes[message.from_user.id] = "echo"
    db.add_user(message.from_user.id, message.from_user.username, message.from_user.first_name)
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –ß–µ–º —è –º–æ–≥—É —Ç–µ–±–µ –ø–æ–º–æ—á—å?")

@bot.message_handler(commands=['help'])   #–û—Ç–≤–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É help
def com_help(message):
    print(message)
    bot.send_message(message.chat.id, "ü§ñ –î–æ—Å—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: \n /start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º \n /smart - –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –±–æ—Ç–∞ –Ω–∞ —Ä–µ–∂–∏–º –ò–ò \n /echo - –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –±–æ—Ç–∞ –Ω–∞ —Ä–µ–∂–∏–º —ç—Ö–æ \n /model_info - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–æ–¥–µ–ª–∏ \n /ai - –≤–æ–ø—Ä–æ—Å –ò–ò \n /history - –ø–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Å–æ–æ–±—â–µ–Ω–∏–π \n /stats - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É \n /help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n /info - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ\n /time - –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è\n /joke - –†–∞—Å—Å–∫–∞–∑–∞—Ç—å —à—É—Ç–∫—É\n /weather - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–≥–æ–¥–µ\n /about - –û —Å–æ–∑–¥–∞—Ç–µ–ª–µ –±–æ—Ç–∞")

@bot.message_handler(commands=['info'])   #–û—Ç–≤–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É info
def com_info(message):
    print(message)
    bot.send_message(message.chat.id,"–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ—Ç –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ —ç—Ö–æ. –¢—ã –º–æ–∂–µ—à—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–Ω–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∞ —è –ø–æ–≤—Ç–æ—Ä—é –µ–≥–æ!üíû")

@bot.message_handler(commands=['stats'])   #–û—Ç–≤–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É stats
def com_stats(message):
    print(message)
    stats = db.get_user_stats(message.from_user.id)
    if stats:
        bot.send_message(message.chat.id, "–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: \n"
                                          f"–ò–º—è: {stats['first_name']}\n"
                                          f"–ü–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {stats['first_interaction']}\n"
                                          f"–í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {stats['message_count']}\n"
                                          f"User ID: {message.from_user.id}\n"
                         )
    else:
        bot.send_message(message.chat.id,"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—Å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")

@bot.message_handler(commands=['ai'])   #–û—Ç–≤–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É ai
def com_ai(message):
    print(message)
    #user = message.from_user
    question = message.text[4:].strip()
    if not question:
        bot.reply_to(message, "–í–∞–º –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –≤–æ–ø—Ä–æ—Å –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /ai!")
    ai_response = ai_service.get_response(question, message.from_user.first_name)
    bot.reply_to(message, ai_response)

@bot.message_handler(commands=['smart'])   #–û—Ç–≤–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É smart
def com_smart(message):
    print(message)
    user_modes[message.from_user.id] = "ai"

@bot.message_handler(commands=['echo'])   #–û—Ç–≤–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É echo
def com_echo(message):
    print(message)
    user_modes[message.from_user.id] = "echo"

@bot.message_handler(commands=['model_info'])   #–û—Ç–≤–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É model_info
def com_model_info(message):
    print(message)
    current_mode = user_modes.get(message.from_user.id, "echo")
    bot.reply_to(message, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–æ–¥–µ–ª–∏:\n–ú–æ–¥–µ–ª—å: DeepSeek Chat\n–í–∞—à —Ä–µ–∂–∏–º: –ò–ò" if current_mode == 'ai' else '–≠—Ö–æ')

@bot.message_handler(commands=['joke']) #–û—Ç–≤–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É joke
def com_joke(message):
    print(message)
    bot.send_message(message.chat.id, random.choice(joke))

@bot.message_handler(commands=['history'])   #–û—Ç–≤–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É stats
def com_history(message):
    print(message)
    messages = db.get_user_messages(message.from_user.id)
    if messages:
        for i, (text, timestamp) in enumerate(messages, 1):
            bot.send_message(message.chat.id, "–í–∞—à–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è: \n"
                                                    f"{i}. {text}")
    else:
            bot.send_message(message.chat.id, "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π")


@bot.message_handler(commands=['time'])   #–û—Ç–≤–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É time
def com_time(message):
    print(message)
    bot.send_message(message.chat.id, datetime.now().strftime("%H:%M:%S") )

@bot.message_handler(commands=['weather'])   #–û—Ç–≤–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É weather
def com_weather(message):
    print(message)
    bot.send_message(message.chat.id, "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –ø–æ–∫–∞ –Ω–µ —É–º–µ—é –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø–æ–≥–æ–¥—É, –Ω–æ —Å–∫–æ—Ä–æ –Ω–∞—É—á—É—Å—å! ‚õÖ")

@bot.message_handler(commands=['about'])   #–û—Ç–≤–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É about
def com_about(message):
    print(message)
    bot.send_message(message.chat.id, "–°–æ–∑–¥–∞—Ç–µ–ª—å: –ó–ª–∞—Ç–∞ –ù.\n–í–µ—Ä—Å–∏—è: 2.0\n–°–æ–∑–¥–∞–Ω: 06.09.2025")

@bot.message_handler(func=lambda message: True)   #–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
def answer_message(message):
    if message.text[0] !="/":
        print(message)
        current_mode = user_modes.get(message.from_user.id, "echo")
        if current_mode == "ai":
            ai_response = ai_service.get_response(message.text, message.from_user.first_name)
            bot.reply_to(message, ai_response)
        else:
            bot.send_message(message.chat.id, message.text)
        db.add_user(message.from_user.id, message.from_user.username, message.from_user.first_name)

    else:
        bot.send_message(message.chat.id, "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π /help –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.")

@bot.message_handler(func=lambda message: True, content_types=['text'])   #
def add_text_message(message):
    if message.text[0] == "/":
        return

    db.add_user(message.from_user.id, message.from_user.username, message.from_user.first_name)
    if db.add_message(message.from_user.id, message.text):
        logger.info(msg="done")
    else:
        logger.error()


@bot.message_handler(content_types= ['photo', 'sticker'])  #–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏ —Å—Ç–∏–∫–µ—Ä–æ–≤
def photo_sticker(message):
    if message.photo:
        bot.send_message(message.chat.id, '–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ. –ü–æ–∫–∞ —á—Ç–æ —è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è üòï.')

    if message.sticker:
        bot.send_message(message.chat.id, '–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —Å—Ç–∏–∫–µ—Ä. –ü–æ–∫–∞ —á—Ç–æ —è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è üòï.')

bot.polling(none_stop=True)
